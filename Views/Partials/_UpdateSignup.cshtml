@using Crito.Models;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage

@{
    var emailSignupForm = new EmailSignupForm();
}

<!-- news-update-signup -->
<section class="news-update-signup">
    <div class="container">
        <p class="font-dm-lg-heading">@Model.Value("signupEmailHeading")</p>

        @using (Html.BeginUmbracoForm("Index", "Home", FormMethod.Post, new { @novalidate = "novalidate", onsubmit = "validateSignupForm(event)", id = "signup-email-form" }))
        {
            <label hidden>E-mail</label>
            <input asp-for="@emailSignupForm.Email" type="email" id="signup-email-input" onkeyup="errorMessageSignupEmail(event)" required placeholder="username@domain.com" />

            <button type="submit" class="yellow-btn">Subscribe <i
                    class="fa-regular fa-arrow-up-right"></i></button>

            <span class="text-danger" id="signup-email-error"></span>
            <span asp-validation-for="@emailSignupForm.Email" class="text-danger"></span>
            @if (TempData["SuccessMessage"] != null)
            {
                <span class="text-success no-bullets" id="signup-email-success">@TempData["SuccessMessage"]</span>
            }
        }
    </div>
    <img src="~/images/graphics/background-wavy-lines.svg" />
</section>